name: CI/CD
on:
  push:
    branches: ["**"]
    tags: ["*"]
  pull_request:

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build ARM64 Docker Image with Cache
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          tags: pixi_jupyter_container:latest
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move Buildx Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Generate pixi.lock from built container
        run: |
          docker create --name temp-container pixi_jupyter_container:latest
          docker cp temp-container:/home/jovyan/pixi.lock ./pixi.lock
          docker rm temp-container

      - name: Commit pixi.lock if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pixi.lock
          git diff --cached --quiet || git commit -m "Update pixi.lock [ci skip]" && git push origin HEAD:${{ github.ref_name }}

      - name: Set up QEMU for ARM64 runtime emulation
        uses: docker/setup-qemu-action@v3

      - name: Test Jupyter Container with Docker Healthcheck and Smoke Test (ARM64)
        run: |
          docker run -d --name test_jupyter -p 8888:8888 pixi_jupyter_container:latest
          retries=12
          count=0
          until [ "$(docker inspect --format='{{json .State.Health.Status}}' test_jupyter)" = "\"healthy\"" ]; do
            if [ $count -eq $retries ]; then
              echo "Container did not become healthy:"
              docker logs test_jupyter
              docker inspect test_jupyter

              echo "==== Fetching healthcheck debug log ===="
              docker cp test_jupyter:/tmp/healthcheck_debug.log ./healthcheck_debug.log || echo "Failed to copy debug log"
              echo "==== Debug log contents ===="
              cat ./healthcheck_debug.log || echo "No debug log found."

              exit 1
            fi
            echo "Waiting for container to become healthy ($((count+1))/$retries)..."
            sleep 5
            count=$((count+1))
          done
          docker exec test_jupyter bash -c "source /home/jovyan/pixi-activate.sh && python -c 'import numpy; import pandas; import sklearn; print(\"Smoke test passed!\")'"
          docker stop test_jupyter

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'pixi_jupyter_container:latest'
          format: table
          exit-code: 1
          vulnerability-threshold: CRITICAL
          ignore-unfixed: true

      - name: Tag and Push Docker Image
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/pixi_jupyter_container
          TAG=${GITHUB_SHA::7}
          docker tag pixi_jupyter_container:latest $IMAGE:latest
          docker tag pixi_jupyter_container:latest $IMAGE:$TAG
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            docker tag pixi_jupyter_container:latest $IMAGE:${{ github.ref_name }}
            docker push $IMAGE:${{ github.ref_name }}
          fi
