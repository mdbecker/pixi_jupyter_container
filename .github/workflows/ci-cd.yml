name: CI/CD
on:
  push:
    branches: ["**"]
    tags: ["*"]
  pull_request:

jobs:
  build-test-push:
    runs-on: macos-15
    permissions:
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate pixi.lock
        run: |
          docker build --target env-builder -t pixi-env-builder .
          docker create --name temp-container pixi-env-builder
          docker cp temp-container:/home/jovyan/pixi.lock ./pixi.lock
          docker rm temp-container

      - name: Commit pixi.lock if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pixi.lock
          git diff --cached --quiet || git commit -m "Update pixi.lock [ci skip]" && git push origin HEAD:${{ github.ref_name }}

      - name: Build Docker Image
        run: docker build -t pixi-jupyter:latest .

      - name: Test Jupyter Container with Docker Healthcheck
        run: |
          docker run -d --name test_jupyter -p 8888:8888 pixi-jupyter:latest

          retries=12
          count=0
          until [ "$(docker inspect --format='{{json .State.Health.Status}}' test_jupyter)" = "\"healthy\"" ]; do
            if [ $count -eq $retries ]; then
              echo "Container did not become healthy:"
              docker logs test_jupyter
              docker inspect test_jupyter
              exit 1
            fi
            echo "Waiting for container to become healthy ($((count+1))/$retries)..."
            sleep 5
            count=$((count+1))
          done

          docker stop test_jupyter

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'pixi-jupyter:latest'
          format: table
          exit-code: 1
          vulnerability-threshold: CRITICAL
          ignore-unfixed: true

      - name: Tag and Push Docker Image
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/pixi-jupyter
          TAG=${GITHUB_SHA::7}
          docker tag pixi-jupyter:latest $IMAGE:latest
          docker tag pixi-jupyter:latest $IMAGE:$TAG
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            docker tag pixi-jupyter:latest $IMAGE:${{ github.ref_name }}
            docker push $IMAGE:${{ github.ref_name }}
          fi
